package lead.com;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/leads")
public class LeadController {

    @Autowired
    private LeadService leadService;

    // Create a new lead
    @PostMapping
    public ResponseEntity<LeadEntity> createLead(@RequestBody LeadEntity lead) {
        LeadEntity createdLead = leadService.createLead(lead);
        return new ResponseEntity<>(createdLead, HttpStatus.CREATED);
    }

    // Get all leads
    @GetMapping
    public ResponseEntity<List<LeadEntity>> getAllLeads() {
        List<LeadEntity> leads = leadService.getAllLeads();
        return new ResponseEntity<>(leads, HttpStatus.OK);
    }

    // Get a lead by ID
    @GetMapping("/{id}")
    public ResponseEntity<LeadEntity> getLeadById(@PathVariable int id) {
        Optional<LeadEntity> lead = leadService.getLeadById(id);
        return lead.map(ResponseEntity::ok)
                   .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).build());
    }

    // Update a lead by ID
    @PutMapping("/{id}")
    public ResponseEntity<LeadEntity> updateLead(@PathVariable int id, @RequestBody LeadEntity updatedLead) {
        try {
            LeadEntity lead = leadService.updateLead(id, updatedLead);
            return ResponseEntity.ok(lead);
        } catch (RuntimeException e) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
        }
    }

    // Delete a lead by ID
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteLead(@PathVariable int id) {
        leadService.deleteLead(id);
        return ResponseEntity.noContent().build();
    }
}
